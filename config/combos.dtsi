/*                KEY POSITIONS

  ╭────────────────────────┬────────────────────────╮
  │  0   1   2   3   4   5 │  6   7   8   9  10  11 │
  │ 12  13  14  15  16  17 │ 18  19  20  21  22  23 │
  │ 24  25  26  27  28  29 │ 30  31  32  33  34  35 │
  ╰───────────╮ 36  37  38 │ 39  40  41 ╭───────────╯
              ╰────────────┴────────────╯

#define COMBO_TERM 30
#define COMBO_TERM_FAST 18
#define COMBO_TERM_SLOW 30

#define COMBO_IDLE_FAST 150
#define COMBO_IDLE_SLOW 50

/* Horizontal combos - left hand */
// ZMK_COMBO(esc,   &kp ESC/* ,      1 2,     DEF NAV , COMBO_TERM_FAST, COMBO_IDLE_FAST) 
// ZMK_COMBO(ret,   &kp RETURN,   2 3,     DEF NAV , COMBO_TERM_FAST, COMBO_IDLE_FAST)
// ZMK_COMBO(mouse, &smart_mouse, 1 3,     DEF NAV , COMBO_TERM_FAST, COMBO_IDLE_FAST)
//  */
// Combos overlapping HRMs are set up as hold-taps themselves to allow for instantaneous
// chording of mods. Custom hold-tap instances can be bootstrapped on the go using the
// 8-argument version of ZMK_COMBO defined in base.keymap
// 
// ZMK_COMBO(tab,   &hml LS(LALT)TAB, 13 14, DEF NAV , COMBO_TERM_FAST, COMBO_IDLE_FAST)

/* Horizontal combos - right hand */ 

ZMK_COMBO(lt,    &kp LT,       31 32,         NAV    , COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(gt,    &kp GT,       32 33,         NAV    , COMBO_TERM_FAST, COMBO_IDLE_FAST)

ZMK_COMBO(lpar,  &lpar_lt,     31 32,     DEF     , COMBO_TERM_FAST, COMBO_IDLE_FAST, RS(LCTRL),    KEYS_L)
ZMK_COMBO(rpar,  &rpar_gt,     32 33,     DEF     , COMBO_TERM_FAST, COMBO_IDLE_FAST, RS(LALT),     KEYS_L)

ZMK_COMBO(lbkt,  &kp LBKT,     19 20,     DEF     , COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(rbkt,  &kp RBKT,     20 21,     DEF     , COMBO_TERM_FAST, COMBO_IDLE_FAST)

ZMK_COMBO(lbrc,  &kp LBRC,     19 20,         NAV    , COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(rbrc,  &kp RBRC,     20 21,         NAV    , COMBO_TERM_FAST, COMBO_IDLE_FAST)

/* Vertical combos - left hand */
ZMK_COMBO(bslh,  &kp BSLH,     14 27,     DEF NAV , COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
// kevin     
ZMK_MACRO(qtspc,
    bindings = <&macro_tap &kp DQT &kp SPACE>;
) 

ZMK_MACRO(tilspc,
    bindings = <&macro_tap  &kp TILDE &kp SPACE>;
)


ZMK_MACRO(vimg,
    bindings = <&macro_tap  &kp G &kp UNDER>;
)

ZMK_COMBO(vimgc, &vimg,    2 15,     DEF NAV , COMBO_TERM_SLOW, COMBO_IDLE_SLOW)


ZMK_COMBO(bspc,  &kp LS(RET),     7 8,     DEF NAV , COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(del,   &tilspc,      8 9,     DEF NAV , COMBO_TERM_SLOW, COMBO_IDLE_SLOW)


ZMK_COMBO(tilspcc, &tilspc,    13 14,     DEF NAV , COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(colon, &kp COLON,    15 16,     DEF NAV , COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
// sym
ZMK_COMBO(excl, &kp EXCL,        0 1,     DEF NAV , COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(at, &kp AT_SIGN,       1 13,     DEF NAV , COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(hash, &kp HASH,        2 14,     DEF NAV , COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(dollar, &kp DOLLAR,    3 15,     DEF NAV , COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(percent, &kp PERCENT,  4 16,     DEF NAV , COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(caret, &kp CARET,      6 18,     DEF NAV , COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(amp, &kp AMPERSAND,    7 19,     DEF NAV , COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(star, &kp ASTERISK,    8 20,     DEF NAV , COMBO_TERM_SLOW, COMBO_IDLE_SLOW)


ZMK_COMBO(under, &kp UNDER,    3 2,     DEF NAV , COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(minus, &kp MINUS,    19 31,     DEF NAV , COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(qmark, &kp QMARK,    1 2,     DEF NAV , COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(equal, &kp EQUAL,    27 28,     DEF NAV , COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(grave, &kp GRAVE,    15 2,     DEF NAV , COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(pipe, &kp PIPE,    18 30,     DEF NAV , COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(semi, &kp SEMI,    26 25,     DEF NAV , COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(semi2, &kp SEMI,    15 14,     DEF NAV , COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(plus, &kp PLUS,    15 27,     DEF NAV , COMBO_TERM_SLOW, COMBO_IDLE_SLOW)

ZMK_COMBO(tilde, &kp TILDE,    15 14,     DEF NAV , COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(qtspccomb, &qtspc, 19 8, DEF NAV , COMBO_TERM_SLOW, COMBO_IDLE_SLOW)


ZMK_COMBO(fslh,  &kp SLASH,    20 31,     DEF NAV , COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
