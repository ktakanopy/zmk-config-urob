/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>


&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&mmv {
    time-to-max-speed-ms = <680>;
    acceleration-exponent = <2>;
};

&msc {
    time-to-max-speed-ms = <500>;                 /* <--- How long time until max speed is reached */
};

&lt {
    quick-tap-ms = <0>;
    flavor = "tap-preferred";
    tapping-term-ms = <220>;
};

/ {
    combos {
        compatible = "zmk,combos";

        fun_trigger {
            bindings = <&tog 3>;
            key-positions = <40 41 39>;
            timeout-ms = <50>;
            layers = <1 2 3 0 4>;
        };

        onehand {
            bindings = <&tog 4>;
            key-positions = <1 2 3 4>;
            timeout-ms = <50>;
            layers = <1 2 3 0 4>;
        };

        jkesc {
            bindings = <&kp ESCAPE>;
            key-positions = <19 20>;
            layers = <0 3 1 2 4>;
            timeout-ms = <50>;
        };

        esc_left {
            bindings = <&kp ESCAPE>;
            key-positions = <15 16>;
            layers = <0 2 1 3 4>;
            timeout-ms = <50>;
        };

        colon {
            bindings = <&kp COLON>;
            key-positions = <14 15>;
            timeout-ms = <50>;
            layers = <0 1 2 3 4>;
        };
    };

    macros {
        tilde_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>, <&macro_tap>, <&kp TILDE &kp SPACE>;

            label = "NEW_MACRO";
        };

        home_tilde: home_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>, <&macro_tap>, <&kp TILDE &kp SPACE &kp SLASH>;

            label = "HOME_TILDE";
        };

        g_: g_ {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>, <&macro_tap>, <&kp G &kp UNDERSCORE>;

            label = "G_";
        };

        home_tilde_hidden: home_tilde_hidden {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&none>,
                <&macro_tap>,
                <&kp TILDE &kp SPACE &kp SLASH &kp PERIOD>;

            label = "HOME_TILDE_HIDDEN";
        };

        tmux_visual: tmux_visual {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>, <&macro_tap>, <&kp LC(SPACE) &kp LEFT_BRACKET>;

            label = "TMUX_VISUAL";
        };

        quotes_space: quotes_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>, <&macro_tap>, <&kp DOUBLE_QUOTES &kp SPACE>;

            label = "QUOTES_SPACE";
        };

        single_quote_space: single_quote_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>, <&macro_tap>, <&kp SINGLE_QUOTE &kp SPACE>;

            label = "SINGLE_QUOTE_SPACE";
        };

        // Swapper for smart alt+tab

        swapper: swapper {
            compatible = "zmk,behavior-tri-state";
            label = "SWAPPER";
            #binding-cells = <0>;
            bindings = <&kt LGUI>, <&kp TAB>, <&kt LGUI>;

            ignored-key-positions = <21>;
        };

        // Swapper for smart alt+tab
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U  &kp I            &kp O    &kp P             &kp BACKSPACE
&sk LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J  &kp K            &kp L    &kp SINGLE_QUOTE  &sk RIGHT_ALT
&sk LALT   &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M  &kp COMMA        &kp DOT  &kp FSLH          &sl 3
                         &sk LGUI  &mo 1  &kp ENTER    &kp SPACE  &mo 2  &sk RIGHT_SHIFT
            >;

            label = "base";
        };

        lower_layer {
            bindings = <
&kp TAB        &kp N1         &kp N2            &kp N3                &kp N4         &kp N5            &kp N6     &kp N7          &kp N8        &kp N9     &kp N0      &kp DELETE
&kp LG(GRAVE)  &kp PAGE_UP    &kp LG(ENTER)     &kp LS(ENTER)         &kp LC(SPACE)  &msc SCRL_UP      &kp LEFT   &kp DOWN        &kp UP_ARROW  &kp RIGHT  &caps_word  &trans
&none          &kp PAGE_DOWN  &kp LC(LS(LGUI))  &kp LS(LG(LEFT_ALT))  &kp ESCAPE     &msc SCRL_DOWN    &mkp LCLK  &kp HOME        &kp END       &mkp RCLK  &kp K_APP   &trans
                                                &trans                &trans         &trans            &kp LGUI   &kp LEFT_SHIFT  &kp LS(G)
            >;

            label = "lower";
        };

        raise_layer {
            bindings = <
&kp GRAVE  &kp EXCLAMATION  &kp AT_SIGN           &kp HASH          &kp DOLLAR      &kp PERCENT      &kp CARET      &kp AMPERSAND    &kp ASTERISK       &kp UNDER              &kp MINUS         &kp TILDE
&kp LCTRL  &kp LESS_THAN    &kp LEFT_PARENTHESIS  &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp BACKSLASH    &kp SLASH      &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &kp GREATER_THAN  &tilde_macro
&kp LALT   &g_              &kp MINUS             &kp PLUS          &kp EQUAL       &kp COLON        &kp SEMICOLON  &kp QUESTION     &quotes_space      &single_quote_space    &tmux_visual      &trans
                                                  &sk LGUI          &trans          &none            &trans         &trans           &trans
            >;

            label = "raise";
        };

        function_layer {
            bindings = <
&trans  &kp F1    &kp F2   &kp F3  &kp F4  &kp F5      &kp F6         &kp F7        &kp F8         &kp F9  &kp F10     &trans
&trans  &kp F11   &kp F12  &trans  &trans  &trans      &bt BT_SEL 0   &bt BT_SEL 1  &bt BT_SEL 2   &trans  &bt BT_CLR  &trans
&trans  &kp CAPS  &trans   &trans  &trans  &trans      &trans         &trans        &bt BT_DISC 2  &trans  &tog 1      &kp PRINTSCREEN
                           &trans  &trans  &kp SEMI    &kp BACKSPACE  &trans        &trans
            >;

            label = "fun";
        };

        onehand {
            bindings = <
&kp LG(LS(LC(NUMBER_3)))  &kp LG(GRAVE)  &kp LG(LEFT_BRACE)  &kp LG(RIGHT_BRACE)  &tmux_visual    &kp LG(LS(V))    &trans         &trans          &mmv MOVE_UP    &trans           &trans           &trans
&kp LG(LS(N5))            &kp LG(Z)      &kp LG(X)           &kp LG(C)            &kp LG(V)       &kp LG(LS(Z))    &kp PAGE_UP    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans           &trans
&kp LG(LS(NUMBER_4))      &kp SPACE      &kp LS(ENTER)       &kp LG(ENTER)        &kp ESCAPE      &kp BSPC         &kp PAGE_DOWN  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP     &msc SCRL_RIGHT  &trans
                                                             &kp LEFT_COMMAND     &kp LEFT_SHIFT  &kp RET          &mkp LCLK      &mkp RCLK       &mkp MCLK
            >;

            label = "1_hand";
        };
    };
};
